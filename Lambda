import boto3
import json

def check_job_status(job_id):
    textract = boto3.client('textract')
    response = textract.get_document_analysis(JobId=job_id)
    status = response['JobStatus']
    print(f"Job status: {status}")
    
    if status in ['SUCCEEDED', 'FAILED']:
        return status, response
    else:
        return check_job_status(job_id)

def lambda_handler(event, context):
    s3_bucket_name = event['Records'][0]['s3']['bucket']['name']
    s3_object_key = event['Records'][0]['s3']['object']['key']

    textract = boto3.client('textract')
    dynamodb = boto3.resource('dynamodb')
    table = dynamodb.Table('TextractResultsTable')

    # Start the Textract job
    textract_start_analysis = textract.start_document_analysis(
        DocumentLocation={
            'S3Object': {
                'Bucket': s3_bucket_name,
                'Name': s3_object_key
            }
        },
        FeatureTypes=["QUERIES"],
        QueriesConfig={
            "Queries": [
                {
                    "Alias": "HoursWorkedQuery",
                    "Pages": ["1"],
                    "Text": "How many hours were worked for gross wages?"
                },
                {
                    "Alias": "PersonNameQuery",
                    "Pages": ["1"],
                    "Text": "What is the persons name on this document?"
                },
                {
                    "Alias": "PeriodWorkedQuery",
                    "Pages": ["1"],
                    "Text": "What was the period this person worked during?"
                }
            ]
        }
    )


    
    # Get the JobId
    job_id = textract_start_analysis['JobId']
    print(f"Job started with ID: {job_id}!")
    
    status, response = check_job_status(job_id)
    
    # If the job succeeded, store each key-value pair in DynamoDB
    if status == 'SUCCEEDED':
        print(f"Job {job_id} succeeded!")
        
        answers = []
        response_blocks = response.get('Blocks', [])
        
        for block in response_blocks:
            if block['BlockType'] == 'QUERY_RESULT':
                block_id = block['Id']
                
                answer_value = block['Text']
                confidence_score = str(block['Confidence'])
                
                answers.append({
                    'Text': answer_value,
                    'Confidence': confidence_score
                })
                
                print(block)

        item = {
            'JobId': job_id,
            'Answers': answers
        }

        table.put_item(Item=item)
    
    return {
        'statusCode': 200,
        'body': json.dumps('Textract processing completed successfully!')
    }